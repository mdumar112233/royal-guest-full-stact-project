{"ast":null,"code":"var _jsxFileName = \"/home/md/Desktop/web development with jhankar mahmud/royal-guest-full-stact-project/client/src/Components/UserSignUPAndSignIn/LoginUser/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { UserContext } from '../../App';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { initializeFirebase } from './LoginManager';\nimport './Login.css';\nimport { Link } from 'react-router-dom';\nimport googleIcon from '../../image/googleIcon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n  const history = useHistory();\n  const location = useLocation();\n  const {\n    from\n  } = location.state || {\n    from: {\n      pathname: \"/\"\n    }\n  };\n  initializeFirebase();\n  const [user, setUser] = useState({\n    email: '',\n    password: ''\n  });\n\n  const handleChange = e => {\n    let isInputValid;\n\n    if (e.target.name === 'email') {\n      isInputValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\n    }\n\n    if (e.target.name === 'password') {\n      isInputValid = e.target.value.length > 6;\n    }\n\n    if (isInputValid) {\n      const newUserInfo = { ...user\n      };\n      newUserInfo[e.target.name] = e.target.value;\n      setUser(newUserInfo);\n    }\n  };\n\n  const handleSubmit = e => {\n    firebase.auth().signInWithEmailAndPassword(user.email, user.password).then(() => {\n      const newUserInfo = { ...user\n      };\n      newUserInfo.error = '';\n      newUserInfo.success = true;\n      setLoggedInUser(newUserInfo);\n      history.replace(from);\n      setUser(newUserInfo);\n    }).catch(error => {\n      const newUserInfo = { ...user\n      };\n      newUserInfo.error = error.message;\n      newUserInfo.success = false;\n      setUser(newUserInfo);\n    });\n    e.preventDefault();\n  };\n\n  const handleSignIn = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(provider).then(result => {\n      const user = result.user;\n      const {\n        displayName,\n        email\n      } = user;\n      const signInUser = {\n        name: displayName,\n        email\n      };\n      setLoggedInUser(signInUser);\n      history.replace(from);\n    }).catch(error => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      const email = error.email;\n      const credential = error.credential;\n      console.log(errorCode, errorMessage, email, credential);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container text-center\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-center\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          onBlur: handleChange,\n          name: \"email\",\n          type: \"text\",\n          placeholder: \"your email\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 106\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 111\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onBlur: handleChange,\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"your password\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 118\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 123\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'red'\n          },\n          children: user.error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), user.success && /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: 'green'\n          },\n          children: \"user login successfully\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"me-5 mb-4\",\n          type: \"submit\",\n          value: \"login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/createAccount\",\n            children: \"Sign up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 82\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 76\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signIn login-user\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: googleIcon,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 28\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), \"  \", /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"login-btn\",\n          onClick: handleSignIn,\n          type: \"button\",\n          value: \"Login with Google\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"cTXwFD3fkTQLCYWZ0SVwqvthYVQ=\", false, function () {\n  return [useHistory, useLocation];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/md/Desktop/web development with jhankar mahmud/royal-guest-full-stact-project/client/src/Components/UserSignUPAndSignIn/LoginUser/Login.js"],"names":["React","useContext","useState","useHistory","useLocation","UserContext","firebase","initializeFirebase","Link","googleIcon","Login","loggedInUser","setLoggedInUser","history","location","from","state","pathname","user","setUser","email","password","handleChange","e","isInputValid","target","name","test","value","length","newUserInfo","handleSubmit","auth","signInWithEmailAndPassword","then","error","success","replace","catch","message","preventDefault","handleSignIn","provider","GoogleAuthProvider","signInWithPopup","result","displayName","signInUser","errorCode","code","errorMessage","credential","console","log","color"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport { UserContext } from '../../App';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport { initializeFirebase } from './LoginManager';\nimport './Login.css';\nimport { Link } from 'react-router-dom';\nimport googleIcon from '../../image/googleIcon.png';\n\n\nconst Login = () => {\n\n    const [loggedInUser, setLoggedInUser] = useContext(UserContext);\n    const history = useHistory();\n    const location = useLocation();\n\n    const { from } = location.state || { from: { pathname: \"/\" } };\n\n\n    initializeFirebase();\n    const [user, setUser] = useState({\n        email: '',\n        password: ''\n    });\n\n\n\n    const handleChange = e => {\n        let  isInputValid;\n        if(e.target.name === 'email'){\n            isInputValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\n\n        }\n        if(e.target.name === 'password'){\n            isInputValid = e.target.value.length > 6;\n        }\n        if(isInputValid){\n            const newUserInfo = {...user};\n            newUserInfo[e.target.name] = e.target.value;\n            setUser(newUserInfo);\n        }\n    }\n\n\n    const handleSubmit = (e) => {\n        firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n            .then(() => {\n                const newUserInfo = {...user};\n                newUserInfo.error = '';\n                newUserInfo.success = true;\n                setLoggedInUser(newUserInfo);\n                history.replace(from);\n                setUser(newUserInfo);\n            })\n            .catch((error) => {\n                const newUserInfo = {...user};\n                newUserInfo.error = error.message;\n                newUserInfo.success = false;\n                setUser(newUserInfo);\n            });\n            e.preventDefault();\n         }\n\n\n         const handleSignIn = () =>{\n            const provider = new firebase.auth.GoogleAuthProvider();\n            firebase.auth().signInWithPopup(provider)\n            .then((result) => {\n              const user = result.user;\n              const {displayName, email} = user;\n              const signInUser = {name: displayName, email}; \n              setLoggedInUser(signInUser);\n              history.replace(from);\n            }).catch((error) => {\n              const errorCode = error.code;\n              const errorMessage = error.message;\n              const email = error.email;\n              const credential = error.credential;\n              console.log(errorCode, errorMessage, email, credential);\n            });\n        }\n\n    return (\n        <div className='login-container text-center'>\n            <div>\n            <h2 className='text-center'>Login</h2>\n            <form onSubmit={handleSubmit}>\n                <input onBlur={handleChange} name='email' type=\"text\" placeholder='your email' required/><br/><br/>\n                <input onBlur={handleChange}  type=\"password\" name='password' placeholder='your password' required /><br/><br/>\n                <p style={{color:'red'}}>{user.error}</p>\n                {\n                    user.success && <p style={{color:'green'}}>user login successfully</p>\n                }\n                <input className='me-5 mb-4' type=\"submit\" value=\"login\"/> <span><Link to='/createAccount'>Sign up</Link></span>\n            </form>\n            <div className=\"signIn login-user\">\n                    <span> <img src={googleIcon} alt=\"\"/></span>  <input className='login-btn' onClick={handleSignIn} type=\"button\" value='Login with Google'/>\n            </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}